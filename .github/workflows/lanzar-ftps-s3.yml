name: lanzar-ftps-s3

on:
  workflow_dispatch:

jobs:
  setup_instance:
    runs-on: ubuntu-latest

    steps:
      # Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configurar credenciales de AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      # Lanzar una instancia EC2 con el script de user data
      - name: Launch EC2 Instance with User Data
        run: |
          aws ec2 run-instances \
            --image-id ami-0abcdef1234567890 \ # Cambiar por el AMI adecuado
            --count 1 \
            --instance-type t2.micro \
            --key-name my-key-pair \ # Cambiar por el nombre de tu par de claves
            --security-group-ids sg-0123456789abcdef0 \ # Cambiar por el ID del grupo de seguridad
            --subnet-id subnet-0123456789abcdef0 \ # Cambiar por el ID de la subred
            --user-data file://setup_script.sh \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MySetupInstance}]'

      # Esperar hasta que la instancia est√© lista
      - name: Wait for EC2 Instance
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=MySetupInstance" --query "Reservations[0].Instances[0].InstanceId" --output text)
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID

  terraform:
    runs-on: ubuntu-latest
    needs: setup_instance

    steps:
      # Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Instalar Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      # Configurar credenciales de AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      # Inicializar Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: .

      # Planificar Terraform
      - name: Terraform Plan
        run: terraform plan
        working-directory: .

      # Aplicar Terraform
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: .

      # Guardar el archivo terraform.tfstate como artefacto
      - name: Upload Terraform State as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform_state
          path: terraform.tfstate
